services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"

  broker:
    image: confluentinc/cp-kafka:latest
    container_name: broker
    restart: always
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,INTERNAL://broker:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,INTERNAL://broker:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "broker:29092", "--list"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s

  flink-jobmanager:
      build:
        context: ./flink
        dockerfile: Dockerfile.pyflink
      container_name: flink-jobmanager
      ports:
        - "8081:8081"
      command: jobmanager
      environment:
        - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
      volumes:
        - ./flink/pyflink_kafka_job.py:/opt/flink/pyflink_kafka_job.py
        - ./flink/simple_enhanced_job.py:/opt/flink/simple_enhanced_job.py

  flink-taskmanager:
      build:
        context: ./flink
        dockerfile: Dockerfile.pyflink
      container_name: flink-taskmanager
      depends_on:
        - flink-jobmanager
      command: taskmanager
      environment:
        - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager

  fastapi:
    build:
      context: ./fastapi_app
    container_name: fastapi
    ports:
      - "8000:8000"
    depends_on:
      broker:
        condition: service_healthy
    restart: on-failure
    command: /bin/sh -c "sleep 15 && uvicorn main:app --host 0.0.0.0 --port 8000 --reload --log-level debug"
      
